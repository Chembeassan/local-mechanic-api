{
  "openapi": "3.0.0",
  "info": {
    "title": "Local Mechanic Finder API",
    "description": "API for finding and managing local mechanics and their services.",
    "version": "1.0.0"
  },
  "servers": [
    {
    "url": "https://local-mechanic-api.onrender.com"

    }
  ],
  "paths": {
    "/mechanics": {
      "get": {
        "summary": "Get all mechanics",
        "responses": {
          "200": {
            "description": "A list of mechanics"
          }
        }
      },
      "post": {
        "summary": "Add a new mechanic",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "location": { "type": "string" },
                  "specialty": { "type": "string" },
                  "contact": { "type": "string" },
                  "rating": { "type": "number" },
                  "availability": { "type": "boolean" },
                  "image": { "type": "string" }
                },
                "required": ["name", "location", "specialty", "contact"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Mechanic created"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/mechanics/{id}": {
      "get": {
        "summary": "Get a mechanic by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Mechanic found" },
          "404": { "description": "Mechanic not found" }
        }
      },
      "put": {
        "summary": "Update a mechanic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "location": { "type": "string" },
                  "specialty": { "type": "string" },
                  "contact": { "type": "string" },
                  "rating": { "type": "number" },
                  "availability": { "type": "boolean" },
                  "image": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Mechanic updated" },
          "400": { "description": "Validation error" }
        }
      },
      "delete": {
        "summary": "Delete a mechanic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Deleted successfully" },
          "404": { "description": "Mechanic not found" }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "Get all services",
        "responses": {
          "200": { "description": "A list of services" }
        }
      },
      "post": {
        "summary": "Add a new service",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mechanicId": { "type": "string" },
                  "type": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "string" }
                },
                "required": ["mechanicId", "type", "price"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Service created" },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "summary": "Get a service by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Service found" },
          "404": { "description": "Service not found" }
        }
      },
      "put": {
        "summary": "Update a service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Service updated" },
          "400": { "description": "Validation error" }
        }
      },
      "delete": {
        "summary": "Delete a service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Deleted successfully" },
          "404": { "description": "Service not found" }
        }
      }
    }
  }
}

